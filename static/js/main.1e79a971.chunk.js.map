{"version":3,"sources":["components/social-profile/Profile.module.css","components/statistics/Statistics.module.css","components/friends-list/FriendListItem.module.css","components/transaction-history/Transaction.module.css","components/friends-list/FriendList.module.css","components/social-profile/Profile.js","components/statistics/getRandomBg.js","components/statistics/Statistics.js","components/friends-list/FriendListItem.js","components/friends-list/FriendList.js","components/transaction-history/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","stats__item","label","quantity","followers","views","likes","defaultProps","getRandomCol","Math","round","random","backgroundColor","Statistics","title","statistics","stat_list","map","stat","key","id","style","item","percentage","FriendListItem","isOnline","spanClasses","status","push","online","offline","join","Span","width","FriendList","friends","friendlist","friend","TransactionHistory","items","transactionHistory","tableHead","itemType","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e79a971.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3Jd9C\",\"description\":\"Profile_description__1qHE9\",\"avatar\":\"Profile_avatar__3a_ay\",\"name\":\"Profile_name__1JQwY\",\"tag\":\"Profile_tag__2DeiS\",\"location\":\"Profile_location__aTAvk\",\"stats\":\"Profile_stats__1jZXh\",\"stats__item\":\"Profile_stats__item__3XAwz\",\"label\":\"Profile_label__rOdyi\",\"quantity\":\"Profile_quantity__2eIEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"stat_list\":\"Statistics_stat_list__iE5sE\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\",\"percentage\":\"Statistics_percentage__wJ8w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2Cyq7\",\"status\":\"FriendListItem_status__2pFs0\",\"online\":\"FriendListItem_online__P3rVB FriendListItem_status__2pFs0\",\"offline\":\"FriendListItem_offline__2ixua FriendListItem_status__2pFs0\",\"avatar\":\"FriendListItem_avatar__Z8ufg\",\"name\":\"FriendListItem_name__2uoE9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__1TAq8\",\"tableHead\":\"Transaction_tableHead__1B53Q\",\"item\":\"Transaction_item__RdDgN\",\"itemType\":\"Transaction_itemType__3uFm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"FriendList_friendlist__1awj9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.stats__item}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n\n      <li className={styles.stats__item}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li className={styles.stats__item}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar: 'https://dummyimage.com/128/999799/fff.png&text=AVA',\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","const getRandomCol = () => Math.round(Math.random() * 255);\nconst backgroundColor = () => {\n  return `rgb(${getRandomCol()}, ${getRandomCol()}, ${getRandomCol()})`;\n};\n\nexport default backgroundColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport backgroundColor from './getRandomBg';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.stat_list}>\n      {stats.map(stat => (\n        <li\n          key={stat.id}\n          style={{ backgroundColor: backgroundColor() }}\n          className={styles.item}\n        >\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst Span = isOnline => {\n  const spanClasses = [styles.status];\n\n  if (isOnline) {\n    spanClasses.push(styles.online);\n  } else {\n    spanClasses.push(styles.offline);\n  }\n  return <span className={spanClasses.join(' ')}></span>;\n};\n\nconst FriendListItem = ({ avatar, name, isOnline }) => (\n  <li className={styles.item}>\n    {Span(isOnline)}\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.defaultProps = {\n  avatar: 'https://dummyimage.com/128/999799/fff.png&text=AVA',\n};\n\nFriendListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendlist}>\n    {friends.map(friend => (\n      <FriendListItem\n        key={friend.id}\n        avatar={friend.avatar}\n        name={friend.name}\n        isOnline={friend.isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Transaction.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th className={styles.tableHead}>Type</th>\n        <th className={styles.tableHead}>Amount</th>\n        <th className={styles.tableHead}>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr className={styles.item} key={item.id}>\n          <td className={styles.itemType}>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n  }),\n};\n\nexport default TransactionHistory;\n","import React, { Fragment } from 'react';\nimport Profile from './components/social-profile/Profile';\nimport Statistics from './components/statistics/Statistics';\nimport FriendList from './components/friends-list/FriendList';\nimport TransactionHistory from './components/transaction-history/TransactionHistory';\nimport transactions from './JSON/transactions.json';\nimport user from './JSON/user.json';\nimport statisticalData from './JSON/statistical-data.json';\nimport friends from './JSON/friends.json';\nimport './css/body.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}